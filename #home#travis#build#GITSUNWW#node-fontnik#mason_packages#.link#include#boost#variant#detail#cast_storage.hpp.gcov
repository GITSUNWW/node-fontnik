        -:    0:Source:/home/travis/build/GITSUNWW/node-fontnik/mason_packages/.link/include/boost/variant/detail/cast_storage.hpp
        -:    0:Graph:/home/travis/build/GITSUNWW/node-fontnik/build/Debug/obj.target/fontnik/src/glyphs.gcno
        -:    0:Data:/home/travis/build/GITSUNWW/node-fontnik/build/Debug/obj.target/fontnik/src/glyphs.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://-----------------------------------------------------------------------------
        -:    2:// boost variant/detail/cast_storage.hpp header file
        -:    3:// See http://www.boost.org for updates, documentation, and revision history.
        -:    4://-----------------------------------------------------------------------------
        -:    5://
        -:    6:// Copyright (c) 2003
        -:    7:// Eric Friedman
        -:    8://
        -:    9:// Distributed under the Boost Software License, Version 1.0. (See
        -:   10:// accompanying file LICENSE_1_0.txt or copy at
        -:   11:// http://www.boost.org/LICENSE_1_0.txt)
        -:   12:
        -:   13:#ifndef BOOST_VARIANT_DETAIL_CAST_STORAGE_HPP
        -:   14:#define BOOST_VARIANT_DETAIL_CAST_STORAGE_HPP
        -:   15:
        -:   16:#include <boost/config.hpp>
        -:   17:
        -:   18:namespace boost {
        -:   19:namespace detail { namespace variant {
        -:   20:
        -:   21:///////////////////////////////////////////////////////////////////////////////
        -:   22:// (detail) function template cast_storage
        -:   23://
        -:   24:// Casts the given storage to the specified type, but with qualification.
        -:   25://
        -:   26:
        -:   27:template <typename T>
function _ZN5boost6detail7variant12cast_storageINS_8geometry5index6detail5rtree12variant_leafISt4pairINS3_5model3boxINS9_5pointIfLm2ENS3_2cs9cartesianEEEEES8_ISE_SE_EENS4_5rstarILm16ELm4ELm4ELm32EEESF_NS6_10allocatorsINS_9container13new_allocatorISH_EESH_SJ_SF_NS6_23node_variant_static_tagEEESO_EEEERT_Pv called 2183690 returned 100% blocks executed 100%
function _ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8geometry5index6detail5rtree12variant_leafISt4pairINS4_5model3boxINSA_5pointIfLm2ENS4_2cs9cartesianEEEEES9_ISF_SF_EENS5_5rstarILm16ELm4ELm4ELm32EEESG_NS7_10allocatorsINS_9container13new_allocatorISI_EESI_SK_SG_NS7_23node_variant_static_tagEEESP_EEEEEERT_Pv called 0 returned 0% blocks executed 0%
function _ZN5boost6detail7variant12cast_storageINS_8geometry5index6detail5rtree21variant_internal_nodeISt4pairINS3_5model3boxINS9_5pointIfLm2ENS3_2cs9cartesianEEEEES8_ISE_SE_EENS4_5rstarILm16ELm4ELm4ELm32EEESF_NS6_10allocatorsINS_9container13new_allocatorISH_EESH_SJ_SF_NS6_23node_variant_static_tagEEESO_EEEERT_Pv called 743009 returned 100% blocks executed 100%
function _ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8geometry5index6detail5rtree21variant_internal_nodeISt4pairINS4_5model3boxINSA_5pointIfLm2ENS4_2cs9cartesianEEEEES9_ISF_SF_EENS5_5rstarILm16ELm4ELm4ELm32EEESG_NS7_10allocatorsINS_9container13new_allocatorISI_EESI_SK_SG_NS7_23node_variant_static_tagEEESP_EEEEEERT_Pv called 0 returned 0% blocks executed 0%
  2926699:   28:inline T& cast_storage(void* storage)
        -:   29:{
  2926699:   30:    return *static_cast<T*>(storage);
        -:   31:}
        -:   32:
        -:   33:template <typename T>
        -:   34:inline const T& cast_storage(const void* storage)
        -:   35:{
        -:   36:    return *static_cast<const T*>(storage);
        -:   37:}
        -:   38:
        -:   39:}} // namespace detail::variant
        -:   40:} // namespace boost
        -:   41:
        -:   42:#endif // BOOST_VARIANT_DETAIL_CAST_STORAGE_HPP
