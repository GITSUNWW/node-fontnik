        -:    0:Source:/home/travis/build/GITSUNWW/node-fontnik/mason_packages/.link/include/boost/geometry/index/detail/rtree/rstar/redistribute_elements.hpp
        -:    0:Graph:/home/travis/build/GITSUNWW/node-fontnik/build/Debug/obj.target/fontnik/src/glyphs.gcno
        -:    0:Data:/home/travis/build/GITSUNWW/node-fontnik/build/Debug/obj.target/fontnik/src/glyphs.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// Boost.Geometry Index
        -:    2://
        -:    3:// R-tree R*-tree split algorithm implementation
        -:    4://
        -:    5:// Copyright (c) 2011-2017 Adam Wulkiewicz, Lodz, Poland.
        -:    6://
        -:    7:// Use, modification and distribution is subject to the Boost Software License,
        -:    8:// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
        -:    9:// http://www.boost.org/LICENSE_1_0.txt)
        -:   10:
        -:   11:#ifndef BOOST_GEOMETRY_INDEX_DETAIL_RTREE_RSTAR_REDISTRIBUTE_ELEMENTS_HPP
        -:   12:#define BOOST_GEOMETRY_INDEX_DETAIL_RTREE_RSTAR_REDISTRIBUTE_ELEMENTS_HPP
        -:   13:
        -:   14:#include <boost/geometry/index/detail/algorithms/intersection_content.hpp>
        -:   15:#include <boost/geometry/index/detail/algorithms/margin.hpp>
        -:   16:#include <boost/geometry/index/detail/algorithms/nth_element.hpp>
        -:   17:#include <boost/geometry/index/detail/algorithms/union_content.hpp>
        -:   18:
        -:   19:#include <boost/geometry/index/detail/bounded_view.hpp>
        -:   20:
        -:   21:#include <boost/geometry/index/detail/rtree/node/node.hpp>
        -:   22:#include <boost/geometry/index/detail/rtree/visitors/insert.hpp>
        -:   23:#include <boost/geometry/index/detail/rtree/visitors/is_leaf.hpp>
        -:   24:
        -:   25:namespace boost { namespace geometry { namespace index {
        -:   26:
        -:   27:namespace detail { namespace rtree {
        -:   28:
        -:   29:namespace rstar {
        -:   30:
        -:   31:template <typename Element, typename Translator, typename Tag, size_t Corner, size_t AxisIndex>
        -:   32:class element_axis_corner_less
        -:   33:{
        -:   34:    typedef typename rtree::element_indexable_type<Element, Translator>::type indexable_type;
        -:   35:    typedef typename geometry::point_type<indexable_type>::type point_type;
        -:   36:    typedef geometry::model::box<point_type> bounds_type;
        -:   37:    typedef index::detail::bounded_view<indexable_type, bounds_type> bounded_view_type;
        -:   38:
        -:   39:public:
        -:   40:    element_axis_corner_less(Translator const& tr)
        -:   41:        : m_tr(tr)
        -:   42:    {}
        -:   43:
        -:   44:    bool operator()(Element const& e1, Element const& e2) const
        -:   45:    {
        -:   46:        bounded_view_type bounded_ind1(rtree::element_indexable(e1, m_tr));
        -:   47:        bounded_view_type bounded_ind2(rtree::element_indexable(e2, m_tr));
        -:   48:
        -:   49:        return geometry::get<Corner, AxisIndex>(bounded_ind1)
        -:   50:            < geometry::get<Corner, AxisIndex>(bounded_ind2);
        -:   51:    }
        -:   52:
        -:   53:private:
        -:   54:    Translator const& m_tr;
        -:   55:};
        -:   56:
        -:   57:template <typename Element, typename Translator, size_t Corner, size_t AxisIndex>
        -:   58:class element_axis_corner_less<Element, Translator, box_tag, Corner, AxisIndex>
        -:   59:{
        -:   60:public:
function _ZN5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessISt4pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEES6_ISC_SC_EENS2_10translatorINS1_9indexableISF_EENS1_8equal_toISF_EEEENS0_7box_tagELm0ELm0EEC2ERKSL_ called 6861 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessISt4pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEES6_ISC_SC_EENS2_10translatorINS1_9indexableISF_EENS1_8equal_toISF_EEEENS0_7box_tagELm1ELm0EEC2ERKSL_ called 5189 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessISt4pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEES6_ISC_SC_EENS2_10translatorINS1_9indexableISF_EENS1_8equal_toISF_EEEENS0_7box_tagELm0ELm1EEC2ERKSL_ called 7501 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessISt4pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEES6_ISC_SC_EENS2_10translatorINS1_9indexableISF_EENS1_8equal_toISF_EEEENS0_7box_tagELm1ELm1EEC2ERKSL_ called 5212 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessINS3_8ptr_pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISD_SG_ISC_SC_EENS1_5rstarILm16ELm4ELm4ELm32EEESD_NS3_10allocatorsINS_9container13new_allocatorISI_EESI_SK_SD_NS3_23node_variant_static_tagEEESP_EEJNS3_21variant_internal_nodeISI_SK_SD_SQ_SP_EEEEEEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEENS0_7box_tagELm0ELm0EEC2ERKS12_ called 2 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessINS3_8ptr_pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISD_SG_ISC_SC_EENS1_5rstarILm16ELm4ELm4ELm32EEESD_NS3_10allocatorsINS_9container13new_allocatorISI_EESI_SK_SD_NS3_23node_variant_static_tagEEESP_EEJNS3_21variant_internal_nodeISI_SK_SD_SQ_SP_EEEEEEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEENS0_7box_tagELm1ELm0EEC2ERKS12_ called 3 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessINS3_8ptr_pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISD_SG_ISC_SC_EENS1_5rstarILm16ELm4ELm4ELm32EEESD_NS3_10allocatorsINS_9container13new_allocatorISI_EESI_SK_SD_NS3_23node_variant_static_tagEEESP_EEJNS3_21variant_internal_nodeISI_SK_SD_SQ_SP_EEEEEEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEENS0_7box_tagELm0ELm1EEC2ERKS12_ called 3 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessINS3_8ptr_pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISD_SG_ISC_SC_EENS1_5rstarILm16ELm4ELm4ELm32EEESD_NS3_10allocatorsINS_9container13new_allocatorISI_EESI_SK_SD_NS3_23node_variant_static_tagEEESP_EEJNS3_21variant_internal_nodeISI_SK_SD_SQ_SP_EEEEEEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEENS0_7box_tagELm1ELm1EEC2ERKS12_ called 2 returned 100% blocks executed 100%
    24773:   61:    element_axis_corner_less(Translator const& tr)
    24773:   62:        : m_tr(tr)
    24773:   63:    {}
        -:   64:
function _ZNK5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessISt4pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEES6_ISC_SC_EENS2_10translatorINS1_9indexableISF_EENS1_8equal_toISF_EEEENS0_7box_tagELm0ELm0EEclERKSF_SP_ called 462054 returned 100% blocks executed 100%
function _ZNK5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessISt4pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEES6_ISC_SC_EENS2_10translatorINS1_9indexableISF_EENS1_8equal_toISF_EEEENS0_7box_tagELm1ELm0EEclERKSF_SP_ called 377500 returned 100% blocks executed 100%
function _ZNK5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessISt4pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEES6_ISC_SC_EENS2_10translatorINS1_9indexableISF_EENS1_8equal_toISF_EEEENS0_7box_tagELm0ELm1EEclERKSF_SP_ called 499529 returned 100% blocks executed 100%
function _ZNK5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessISt4pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEES6_ISC_SC_EENS2_10translatorINS1_9indexableISF_EENS1_8equal_toISF_EEEENS0_7box_tagELm1ELm1EEclERKSF_SP_ called 379666 returned 100% blocks executed 100%
function _ZNK5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessINS3_8ptr_pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISD_SG_ISC_SC_EENS1_5rstarILm16ELm4ELm4ELm32EEESD_NS3_10allocatorsINS_9container13new_allocatorISI_EESI_SK_SD_NS3_23node_variant_static_tagEEESP_EEJNS3_21variant_internal_nodeISI_SK_SD_SQ_SP_EEEEEEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEENS0_7box_tagELm0ELm0EEclERKSW_S16_ called 157 returned 100% blocks executed 100%
function _ZNK5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessINS3_8ptr_pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISD_SG_ISC_SC_EENS1_5rstarILm16ELm4ELm4ELm32EEESD_NS3_10allocatorsINS_9container13new_allocatorISI_EESI_SK_SD_NS3_23node_variant_static_tagEEESP_EEJNS3_21variant_internal_nodeISI_SK_SD_SQ_SP_EEEEEEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEENS0_7box_tagELm1ELm0EEclERKSW_S16_ called 238 returned 100% blocks executed 100%
function _ZNK5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessINS3_8ptr_pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISD_SG_ISC_SC_EENS1_5rstarILm16ELm4ELm4ELm32EEESD_NS3_10allocatorsINS_9container13new_allocatorISI_EESI_SK_SD_NS3_23node_variant_static_tagEEESP_EEJNS3_21variant_internal_nodeISI_SK_SD_SQ_SP_EEEEEEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEENS0_7box_tagELm0ELm1EEclERKSW_S16_ called 196 returned 100% blocks executed 100%
function _ZNK5boost8geometry5index6detail5rtree5rstar24element_axis_corner_lessINS3_8ptr_pairINS0_5model3boxINS7_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISD_SG_ISC_SC_EENS1_5rstarILm16ELm4ELm4ELm32EEESD_NS3_10allocatorsINS_9container13new_allocatorISI_EESI_SK_SD_NS3_23node_variant_static_tagEEESP_EEJNS3_21variant_internal_nodeISI_SK_SD_SQ_SP_EEEEEEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEENS0_7box_tagELm1ELm1EEclERKSW_S16_ called 142 returned 100% blocks executed 100%
  1719482:   65:    bool operator()(Element const& e1, Element const& e2) const
        -:   66:    {
  3438964:   67:        return geometry::get<Corner, AxisIndex>(rtree::element_indexable(e1, m_tr))
  1719482:   68:            < geometry::get<Corner, AxisIndex>(rtree::element_indexable(e2, m_tr));
        -:   69:    }
        -:   70:
        -:   71:private:
        -:   72:    Translator const& m_tr;
        -:   73:};
        -:   74:
        -:   75:template <typename Element, typename Translator, size_t Corner, size_t AxisIndex>
        -:   76:class element_axis_corner_less<Element, Translator, point_tag, Corner, AxisIndex>
        -:   77:{
        -:   78:public:
        -:   79:    element_axis_corner_less(Translator const& tr)
        -:   80:        : m_tr(tr)
        -:   81:    {}
        -:   82:
        -:   83:    bool operator()(Element const& e1, Element const& e2) const
        -:   84:    {
        -:   85:        return geometry::get<AxisIndex>(rtree::element_indexable(e1, m_tr))
        -:   86:            < geometry::get<AxisIndex>(rtree::element_indexable(e2, m_tr));
        -:   87:    }
        -:   88:
        -:   89:private:
        -:   90:    Translator const& m_tr;
        -:   91:};
        -:   92:
        -:   93:template <typename Box, size_t Corner, size_t AxisIndex>
        -:   94:struct choose_split_axis_and_index_for_corner
        -:   95:{
        -:   96:    typedef typename index::detail::default_margin_result<Box>::type margin_type;
        -:   97:    typedef typename index::detail::default_content_result<Box>::type content_type;
        -:   98:
        -:   99:    template <typename Elements, typename Parameters, typename Translator>
function _ZN5boost8geometry5index6detail5rtree5rstar38choose_split_axis_and_index_for_cornerINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm0ELm0EE5applyINS2_6varrayISt4pairISC_SG_ISB_SB_EELm17EEENS1_5rstarILm16ELm4ELm4ELm32EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRKT_RmReSW_SW_RKT0_RKT1_ called 4953 returned 100% blocks executed 88%
function _ZN5boost8geometry5index6detail5rtree5rstar38choose_split_axis_and_index_for_cornerINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm1ELm0EE5applyINS2_6varrayISt4pairISC_SG_ISB_SB_EELm17EEENS1_5rstarILm16ELm4ELm4ELm32EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRKT_RmReSW_SW_RKT0_RKT1_ called 4953 returned 100% blocks executed 88%
function _ZN5boost8geometry5index6detail5rtree5rstar38choose_split_axis_and_index_for_cornerINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm0ELm1EE5applyINS2_6varrayISt4pairISC_SG_ISB_SB_EELm17EEENS1_5rstarILm16ELm4ELm4ELm32EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRKT_RmReSW_SW_RKT0_RKT1_ called 4953 returned 100% blocks executed 88%
function _ZN5boost8geometry5index6detail5rtree5rstar38choose_split_axis_and_index_for_cornerINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm1ELm1EE5applyINS2_6varrayISt4pairISC_SG_ISB_SB_EELm17EEENS1_5rstarILm16ELm4ELm4ELm32EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRKT_RmReSW_SW_RKT0_RKT1_ called 4953 returned 100% blocks executed 88%
function _ZN5boost8geometry5index6detail5rtree5rstar38choose_split_axis_and_index_for_cornerINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm0ELm0EE5applyINS2_6varrayINS3_8ptr_pairISC_PNS_7variantINS3_12variant_leafISt4pairISC_SJ_ISB_SB_EENS1_5rstarILm16ELm4ELm4ELm32EEESC_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SC_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SC_ST_SS_EEEEEEELm17EEESN_NS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRKT_RmReS1B_S1B_RKT0_RKT1_ called 2 returned 100% blocks executed 88%
function _ZN5boost8geometry5index6detail5rtree5rstar38choose_split_axis_and_index_for_cornerINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm1ELm0EE5applyINS2_6varrayINS3_8ptr_pairISC_PNS_7variantINS3_12variant_leafISt4pairISC_SJ_ISB_SB_EENS1_5rstarILm16ELm4ELm4ELm32EEESC_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SC_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SC_ST_SS_EEEEEEELm17EEESN_NS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRKT_RmReS1B_S1B_RKT0_RKT1_ called 2 returned 100% blocks executed 88%
function _ZN5boost8geometry5index6detail5rtree5rstar38choose_split_axis_and_index_for_cornerINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm0ELm1EE5applyINS2_6varrayINS3_8ptr_pairISC_PNS_7variantINS3_12variant_leafISt4pairISC_SJ_ISB_SB_EENS1_5rstarILm16ELm4ELm4ELm32EEESC_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SC_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SC_ST_SS_EEEEEEELm17EEESN_NS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRKT_RmReS1B_S1B_RKT0_RKT1_ called 2 returned 100% blocks executed 88%
function _ZN5boost8geometry5index6detail5rtree5rstar38choose_split_axis_and_index_for_cornerINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm1ELm1EE5applyINS2_6varrayINS3_8ptr_pairISC_PNS_7variantINS3_12variant_leafISt4pairISC_SJ_ISB_SB_EENS1_5rstarILm16ELm4ELm4ELm32EEESC_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SC_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SC_ST_SS_EEEEEEELm17EEESN_NS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRKT_RmReS1B_S1B_RKT0_RKT1_ called 2 returned 100% blocks executed 85%
    19820:  100:    static inline void apply(Elements const& elements,
        -:  101:                             size_t & choosen_index,
        -:  102:                             margin_type & sum_of_margins,
        -:  103:                             content_type & smallest_overlap,
        -:  104:                             content_type & smallest_content,
        -:  105:                             Parameters const& parameters,
        -:  106:                             Translator const& translator)
        -:  107:    {
        -:  108:        typedef typename Elements::value_type element_type;
        -:  109:        typedef typename rtree::element_indexable_type<element_type, Translator>::type indexable_type;
        -:  110:        typedef typename tag<indexable_type>::type indexable_tag;
        -:  111:
    19820:  112:        BOOST_GEOMETRY_INDEX_ASSERT(elements.size() == parameters.get_max_elements() + 1, "wrong number of elements");
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 100%
branch 15 taken 0%
        -:  113:
        -:  114:        // copy elements
    19820:  115:        Elements elements_copy(elements);                                                                       // MAY THROW, STRONG (alloc, copy)
        -:  116:        
    19820:  117:        size_t const index_first = parameters.get_min_elements();
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 100%
branch 15 taken 0%
    19820:  118:        size_t const index_last = parameters.get_max_elements() - parameters.get_min_elements() + 2;
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 100%
branch 15 taken 0%
branch 16 taken 100%
branch 17 taken 0%
branch 18 taken 100%
branch 19 taken 0%
branch 20 taken 100%
branch 21 taken 0%
branch 22 taken 100%
branch 23 taken 0%
branch 24 taken 100%
branch 25 taken 0%
branch 26 taken 100%
branch 27 taken 0%
branch 28 taken 100%
branch 29 taken 0%
branch 30 taken 100%
branch 31 taken 0%
        -:  119:
        -:  120:        // sort elements
    19820:  121:        element_axis_corner_less<element_type, Translator, indexable_tag, Corner, AxisIndex> elements_less(translator);
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 100%
branch 15 taken 0%
    19818:  122:        std::sort(elements_copy.begin(), elements_copy.end(), elements_less);                                   // MAY THROW, BASIC (copy)
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 100%
branch 15 taken 0%
branch 16 taken 100%
branch 17 taken 0%
branch 18 taken 100%
branch 19 taken 0%
branch 20 taken 100%
branch 21 taken 0%
branch 22 taken 100%
branch 23 taken 0%
branch 24 taken 100%
branch 25 taken 0%
branch 26 taken 100%
branch 27 taken 0%
branch 28 taken 100%
branch 29 taken 0%
branch 30 taken 100%
branch 31 taken 0%
branch 32 taken 100%
branch 33 taken 0%
branch 34 taken 100%
branch 35 taken 0%
branch 36 taken 100%
branch 37 taken 0%
branch 38 taken 100%
branch 39 taken 0%
branch 40 taken 100%
branch 41 taken 0%
branch 42 taken 100%
branch 43 taken 0%
branch 44 taken 100%
branch 45 taken 0%
branch 46 taken 100%
branch 47 taken 0%
        -:  123://        {
        -:  124://            typename Elements::iterator f = elements_copy.begin() + index_first;
        -:  125://            typename Elements::iterator l = elements_copy.begin() + index_last;
        -:  126://            // NOTE: for stdlibc++ shipped with gcc 4.8.2 std::nth_element is replaced with std::sort anyway
        -:  127://            index::detail::nth_element(elements_copy.begin(), f, elements_copy.end(), elements_less);                // MAY THROW, BASIC (copy)
        -:  128://            index::detail::nth_element(f, l, elements_copy.end(), elements_less);                                    // MAY THROW, BASIC (copy)
        -:  129://            std::sort(f, l, elements_less);                                                                   // MAY THROW, BASIC (copy)
        -:  130://        }
        -:  131:
        -:  132:        // init outputs
    19820:  133:        choosen_index = index_first;
    19820:  134:        sum_of_margins = 0;
    19820:  135:        smallest_overlap = (std::numeric_limits<content_type>::max)();
    19820:  136:        smallest_content = (std::numeric_limits<content_type>::max)();
        -:  137:
        -:  138:        // calculate sum of margins for all distributions
   218019:  139:        for ( size_t i = index_first ; i < index_last ; ++i )
branch  0 taken 91%
branch  1 taken 9%
branch  2 taken 91%
branch  3 taken 9%
branch  4 taken 91%
branch  5 taken 9%
branch  6 taken 91%
branch  7 taken 9%
branch  8 taken 91%
branch  9 taken 9%
branch 10 taken 91%
branch 11 taken 9%
branch 12 taken 91%
branch 13 taken 9%
branch 14 taken 91%
branch 15 taken 9%
        -:  140:        {
        -:  141:            // TODO - awulkiew: may be optimized - box of group 1 may be initialized with
        -:  142:            // box of min_elems number of elements and expanded for each iteration by another element
        -:  143:
   198200:  144:            Box box1 = rtree::elements_box<Box>(elements_copy.begin(), elements_copy.begin() + i, translator);
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 100%
branch 15 taken 0%
branch 16 taken 100%
branch 17 taken 0%
branch 18 taken 100%
branch 19 taken 0%
branch 20 taken 100%
branch 21 taken 0%
branch 22 taken 100%
branch 23 taken 0%
branch 24 taken 100%
branch 25 taken 0%
branch 26 taken 100%
branch 27 taken 0%
branch 28 taken 100%
branch 29 taken 0%
branch 30 taken 100%
branch 31 taken 0%
branch 32 taken 100%
branch 33 taken 0%
branch 34 taken 100%
branch 35 taken 0%
branch 36 taken 100%
branch 37 taken 0%
branch 38 taken 100%
branch 39 taken 0%
branch 40 taken 100%
branch 41 taken 0%
branch 42 taken 100%
branch 43 taken 0%
branch 44 taken 100%
branch 45 taken 0%
branch 46 taken 100%
branch 47 taken 0%
   198200:  145:            Box box2 = rtree::elements_box<Box>(elements_copy.begin() + i, elements_copy.end(), translator);
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 100%
branch 15 taken 0%
branch 16 taken 100%
branch 17 taken 0%
branch 18 taken 100%
branch 19 taken 0%
branch 20 taken 100%
branch 21 taken 0%
branch 22 taken 100%
branch 23 taken 0%
branch 24 taken 100%
branch 25 taken 0%
branch 26 taken 100%
branch 27 taken 0%
branch 28 taken 100%
branch 29 taken 0%
branch 30 taken 100%
branch 31 taken 0%
branch 32 taken 100%
branch 33 taken 0%
branch 34 taken 100%
branch 35 taken 0%
branch 36 taken 100%
branch 37 taken 0%
branch 38 taken 100%
branch 39 taken 0%
branch 40 taken 100%
branch 41 taken 0%
branch 42 taken 100%
branch 43 taken 0%
branch 44 taken 100%
branch 45 taken 0%
branch 46 taken 100%
branch 47 taken 0%
        -:  146:            
   198200:  147:            sum_of_margins += index::detail::comparable_margin(box1) + index::detail::comparable_margin(box2);
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 100%
branch 15 taken 0%
branch 16 taken 100%
branch 17 taken 0%
branch 18 taken 100%
branch 19 taken 0%
branch 20 taken 100%
branch 21 taken 0%
branch 22 taken 100%
branch 23 taken 0%
branch 24 taken 100%
branch 25 taken 0%
branch 26 taken 100%
branch 27 taken 0%
branch 28 taken 100%
branch 29 taken 0%
branch 30 taken 100%
branch 31 taken 0%
        -:  148:
   198200:  149:            content_type ovl = index::detail::intersection_content(box1, box2);
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 100%
branch 15 taken 0%
   198200:  150:            content_type con = index::detail::content(box1) + index::detail::content(box2);
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 100%
branch 15 taken 0%
branch 16 taken 100%
branch 17 taken 0%
branch 18 taken 100%
branch 19 taken 0%
branch 20 taken 100%
branch 21 taken 0%
branch 22 taken 100%
branch 23 taken 0%
branch 24 taken 100%
branch 25 taken 0%
branch 26 taken 100%
branch 27 taken 0%
branch 28 taken 100%
branch 29 taken 0%
branch 30 taken 100%
branch 31 taken 0%
        -:  151:
        -:  152:            // TODO - shouldn't here be < instead of <= ?
   198199:  153:            if ( ovl < smallest_overlap || (ovl == smallest_overlap && con <= smallest_content) )
branch  0 taken 79%
branch  1 taken 21%
branch  2 taken 44%
branch  3 taken 56%
branch  4 taken 61%
branch  5 taken 39%
branch  6 taken 84%
branch  7 taken 16%
branch  8 taken 38%
branch  9 taken 62%
branch 10 taken 57%
branch 11 taken 43%
branch 12 taken 79%
branch 13 taken 21%
branch 14 taken 52%
branch 15 taken 48%
branch 16 taken 58%
branch 17 taken 42%
branch 18 taken 85%
branch 19 taken 15%
branch 20 taken 43%
branch 21 taken 57%
branch 22 taken 54%
branch 23 taken 46%
branch 24 taken 50%
branch 25 taken 50%
branch 26 taken 50%
branch 27 taken 50%
branch 28 taken 80%
branch 29 taken 20%
branch 30 taken 75%
branch 31 taken 25%
branch 32 taken 13%
branch 33 taken 87%
branch 34 taken 100%
branch 35 taken 0%
branch 36 taken 85%
branch 37 taken 15%
branch 38 taken 6%
branch 39 taken 94%
branch 40 taken 100%
branch 41 taken 0%
branch 42 taken 80%
branch 43 taken 20%
branch 44 taken 0%
branch 45 taken 100%
branch 46 never executed
branch 47 never executed
        -:  154:            {
    77237:  155:                choosen_index = i;
    77237:  156:                smallest_overlap = ovl;
    77237:  157:                smallest_content = con;
    77237:  158:            }
   198199:  159:        }
        -:  160:
    19820:  161:        ::boost::ignore_unused_variable_warning(parameters);
branch  0 taken 0%
branch  1 taken 100%
branch  2 taken 0%
branch  3 taken 100%
branch  4 taken 0%
branch  5 taken 100%
branch  6 taken 0%
branch  7 taken 100%
branch  8 taken 0%
branch  9 taken 100%
branch 10 taken 0%
branch 11 taken 100%
branch 12 taken 0%
branch 13 taken 100%
branch 14 taken 0%
branch 15 taken 100%
    19820:  162:    }
        -:  163:};
        -:  164:
        -:  165://template <typename Box, size_t AxisIndex, typename ElementIndexableTag>
        -:  166://struct choose_split_axis_and_index_for_axis
        -:  167://{
        -:  168://    BOOST_MPL_ASSERT_MSG(false, NOT_IMPLEMENTED_FOR_THIS_TAG, (ElementIndexableTag));
        -:  169://};
        -:  170:
        -:  171:template <typename Box, size_t AxisIndex, typename ElementIndexableTag>
        -:  172:struct choose_split_axis_and_index_for_axis
        -:  173:{
        -:  174:    typedef typename index::detail::default_margin_result<Box>::type margin_type;
        -:  175:    typedef typename index::detail::default_content_result<Box>::type content_type;
        -:  176:
        -:  177:    template <typename Elements, typename Parameters, typename Translator>
function _ZN5boost8geometry5index6detail5rtree5rstar36choose_split_axis_and_index_for_axisINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm1ENS0_7box_tagEE5applyINS2_6varrayISt4pairISC_SH_ISB_SB_EELm17EEENS1_5rstarILm16ELm4ELm4ELm32EEENS2_10translatorINS1_9indexableISJ_EENS1_8equal_toISJ_EEEEEEvRKT_RmSW_ReSX_SX_RKT0_RKT1_ called 4952 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar36choose_split_axis_and_index_for_axisINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm0ENS0_7box_tagEE5applyINS2_6varrayISt4pairISC_SH_ISB_SB_EELm17EEENS1_5rstarILm16ELm4ELm4ELm32EEENS2_10translatorINS1_9indexableISJ_EENS1_8equal_toISJ_EEEEEEvRKT_RmSW_ReSX_SX_RKT0_RKT1_ called 4953 returned 99% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar36choose_split_axis_and_index_for_axisINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm1ENS0_7box_tagEE5applyINS2_6varrayINS3_8ptr_pairISC_PNS_7variantINS3_12variant_leafISt4pairISC_SK_ISB_SB_EENS1_5rstarILm16ELm4ELm4ELm32EEESC_NS3_10allocatorsINS_9container13new_allocatorISM_EESM_SO_SC_NS3_23node_variant_static_tagEEEST_EEJNS3_21variant_internal_nodeISM_SO_SC_SU_ST_EEEEEEELm17EEESO_NS2_10translatorINS1_9indexableISM_EENS1_8equal_toISM_EEEEEEvRKT_RmS1B_ReS1C_S1C_RKT0_RKT1_ called 2 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar36choose_split_axis_and_index_for_axisINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm0ENS0_7box_tagEE5applyINS2_6varrayINS3_8ptr_pairISC_PNS_7variantINS3_12variant_leafISt4pairISC_SK_ISB_SB_EENS1_5rstarILm16ELm4ELm4ELm32EEESC_NS3_10allocatorsINS_9container13new_allocatorISM_EESM_SO_SC_NS3_23node_variant_static_tagEEEST_EEJNS3_21variant_internal_nodeISM_SO_SC_SU_ST_EEEEEEELm17EEESO_NS2_10translatorINS1_9indexableISM_EENS1_8equal_toISM_EEEEEEvRKT_RmS1B_ReS1C_S1C_RKT0_RKT1_ called 2 returned 100% blocks executed 100%
     9909:  178:    static inline void apply(Elements const& elements,
        -:  179:                             size_t & choosen_corner,
        -:  180:                             size_t & choosen_index,
        -:  181:                             margin_type & sum_of_margins,
        -:  182:                             content_type & smallest_overlap,
        -:  183:                             content_type & smallest_content,
        -:  184:                             Parameters const& parameters,
        -:  185:                             Translator const& translator)
        -:  186:    {
     9909:  187:        size_t index1 = 0;
     9909:  188:        margin_type som1 = 0;
     9909:  189:        content_type ovl1 = (std::numeric_limits<content_type>::max)();
     9909:  190:        content_type con1 = (std::numeric_limits<content_type>::max)();
        -:  191:
     9909:  192:        choose_split_axis_and_index_for_corner<Box, min_corner, AxisIndex>
     9909:  193:            ::apply(elements, index1,
        -:  194:                    som1, ovl1, con1,
     9909:  195:                    parameters, translator);                                                                // MAY THROW, STRONG
        -:  196:
     9909:  197:        size_t index2 = 0;
     9909:  198:        margin_type som2 = 0;
     9909:  199:        content_type ovl2 = (std::numeric_limits<content_type>::max)();
     9909:  200:        content_type con2 = (std::numeric_limits<content_type>::max)();
        -:  201:
     9909:  202:        choose_split_axis_and_index_for_corner<Box, max_corner, AxisIndex>
     9909:  203:            ::apply(elements, index2,
        -:  204:                    som2, ovl2, con2,
     9909:  205:                    parameters, translator);                                                                // MAY THROW, STRONG
        -:  206:
     9909:  207:        sum_of_margins = som1 + som2;
        -:  208:
     9909:  209:        if ( ovl1 < ovl2 || (ovl1 == ovl2 && con1 <= con2) )
branch  0 taken 95%
branch  1 taken 5%
branch  2 taken 93%
branch  3 taken 7%
branch  4 taken 91%
branch  5 taken 9%
branch  6 taken 96%
branch  7 taken 4%
branch  8 taken 93%
branch  9 taken 7%
branch 10 taken 89%
branch 11 taken 11%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 50%
branch 15 taken 50%
branch 16 taken 100%
branch 17 taken 0%
branch 18 taken 100%
branch 19 taken 0%
branch 20 taken 50%
branch 21 taken 50%
branch 22 taken 100%
branch 23 taken 0%
        -:  210:        {
     8335:  211:            choosen_corner = min_corner;
     8335:  212:            choosen_index = index1;
     8335:  213:            smallest_overlap = ovl1;
     8335:  214:            smallest_content = con1;
     8335:  215:        }
        -:  216:        else
        -:  217:        {
     1574:  218:            choosen_corner = max_corner;
     1574:  219:            choosen_index = index2;
     1574:  220:            smallest_overlap = ovl2;
     1574:  221:            smallest_content = con2;
        -:  222:        }
     9909:  223:    }
        -:  224:};
        -:  225:
        -:  226:template <typename Box, size_t AxisIndex>
        -:  227:struct choose_split_axis_and_index_for_axis<Box, AxisIndex, point_tag>
        -:  228:{
        -:  229:    typedef typename index::detail::default_margin_result<Box>::type margin_type;
        -:  230:    typedef typename index::detail::default_content_result<Box>::type content_type;
        -:  231:
        -:  232:    template <typename Elements, typename Parameters, typename Translator>
        -:  233:    static inline void apply(Elements const& elements,
        -:  234:                             size_t & choosen_corner,
        -:  235:                             size_t & choosen_index,
        -:  236:                             margin_type & sum_of_margins,
        -:  237:                             content_type & smallest_overlap,
        -:  238:                             content_type & smallest_content,
        -:  239:                             Parameters const& parameters,
        -:  240:                             Translator const& translator)
        -:  241:    {
        -:  242:        choose_split_axis_and_index_for_corner<Box, min_corner, AxisIndex>
        -:  243:            ::apply(elements, choosen_index,
        -:  244:                    sum_of_margins, smallest_overlap, smallest_content,
        -:  245:                    parameters, translator);                                                                // MAY THROW, STRONG
        -:  246:
        -:  247:        choosen_corner = min_corner;
        -:  248:    }
        -:  249:};
        -:  250:
        -:  251:template <typename Box, size_t Dimension>
        -:  252:struct choose_split_axis_and_index
        -:  253:{
        -:  254:    BOOST_STATIC_ASSERT(0 < Dimension);
        -:  255:
        -:  256:    typedef typename index::detail::default_margin_result<Box>::type margin_type;
        -:  257:    typedef typename index::detail::default_content_result<Box>::type content_type;
        -:  258:
        -:  259:    template <typename Elements, typename Parameters, typename Translator>
function _ZN5boost8geometry5index6detail5rtree5rstar27choose_split_axis_and_indexINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm2EE5applyINS2_6varrayISt4pairISC_SG_ISB_SB_EELm17EEENS1_5rstarILm16ELm4ELm4ELm32EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRKT_RmSV_SV_ReSW_SW_RKT0_RKT1_ called 4953 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar27choose_split_axis_and_indexINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm2EE5applyINS2_6varrayINS3_8ptr_pairISC_PNS_7variantINS3_12variant_leafISt4pairISC_SJ_ISB_SB_EENS1_5rstarILm16ELm4ELm4ELm32EEESC_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SC_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SC_ST_SS_EEEEEEELm17EEESN_NS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRKT_RmS1A_S1A_ReS1B_S1B_RKT0_RKT1_ called 2 returned 100% blocks executed 100%
     4955:  260:    static inline void apply(Elements const& elements,
        -:  261:                             size_t & choosen_axis,
        -:  262:                             size_t & choosen_corner,
        -:  263:                             size_t & choosen_index,
        -:  264:                             margin_type & smallest_sum_of_margins,
        -:  265:                             content_type & smallest_overlap,
        -:  266:                             content_type & smallest_content,
        -:  267:                             Parameters const& parameters,
        -:  268:                             Translator const& translator)
        -:  269:    {
        -:  270:        typedef typename rtree::element_indexable_type<typename Elements::value_type, Translator>::type element_indexable_type;
        -:  271:
     4955:  272:        choose_split_axis_and_index<Box, Dimension - 1>
     4955:  273:            ::apply(elements, choosen_axis, choosen_corner, choosen_index,
     4955:  274:                    smallest_sum_of_margins, smallest_overlap, smallest_content,
     4955:  275:                    parameters, translator);                                                                // MAY THROW, STRONG
        -:  276:
     4955:  277:        margin_type sum_of_margins = 0;
        -:  278:
     4955:  279:        size_t corner = min_corner;
     4955:  280:        size_t index = 0;
        -:  281:
     4955:  282:        content_type overlap_val = (std::numeric_limits<content_type>::max)();
     4955:  283:        content_type content_val = (std::numeric_limits<content_type>::max)();
        -:  284:
     4955:  285:        choose_split_axis_and_index_for_axis<
        -:  286:            Box,
        -:  287:            Dimension - 1,
        -:  288:            typename tag<element_indexable_type>::type
     4955:  289:        >::apply(elements, corner, index, sum_of_margins, overlap_val, content_val, parameters, translator); // MAY THROW, STRONG
        -:  290:
     4955:  291:        if ( sum_of_margins < smallest_sum_of_margins )
branch  0 taken 57%
branch  1 taken 43%
branch  2 taken 50%
branch  3 taken 50%
        -:  292:        {
     2810:  293:            choosen_axis = Dimension - 1;
     2810:  294:            choosen_corner = corner;
     2810:  295:            choosen_index = index;
     2810:  296:            smallest_sum_of_margins = sum_of_margins;
     2810:  297:            smallest_overlap = overlap_val;
     2810:  298:            smallest_content = content_val;
     2810:  299:        }
     4955:  300:    }
        -:  301:};
        -:  302:
        -:  303:template <typename Box>
        -:  304:struct choose_split_axis_and_index<Box, 1>
        -:  305:{
        -:  306:    typedef typename index::detail::default_margin_result<Box>::type margin_type;
        -:  307:    typedef typename index::detail::default_content_result<Box>::type content_type;
        -:  308:
        -:  309:    template <typename Elements, typename Parameters, typename Translator>
function _ZN5boost8geometry5index6detail5rtree5rstar27choose_split_axis_and_indexINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm1EE5applyINS2_6varrayISt4pairISC_SG_ISB_SB_EELm17EEENS1_5rstarILm16ELm4ELm4ELm32EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRKT_RmSV_SV_ReSW_SW_RKT0_RKT1_ called 4953 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar27choose_split_axis_and_indexINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEELm1EE5applyINS2_6varrayINS3_8ptr_pairISC_PNS_7variantINS3_12variant_leafISt4pairISC_SJ_ISB_SB_EENS1_5rstarILm16ELm4ELm4ELm32EEESC_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SC_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SC_ST_SS_EEEEEEELm17EEESN_NS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRKT_RmS1A_S1A_ReS1B_S1B_RKT0_RKT1_ called 2 returned 100% blocks executed 100%
     4955:  310:    static inline void apply(Elements const& elements,
        -:  311:                             size_t & choosen_axis,
        -:  312:                             size_t & choosen_corner,
        -:  313:                             size_t & choosen_index,
        -:  314:                             margin_type & smallest_sum_of_margins,
        -:  315:                             content_type & smallest_overlap,
        -:  316:                             content_type & smallest_content,
        -:  317:                             Parameters const& parameters,
        -:  318:                             Translator const& translator)
        -:  319:    {
        -:  320:        typedef typename rtree::element_indexable_type<typename Elements::value_type, Translator>::type element_indexable_type;
        -:  321:
     4955:  322:        choosen_axis = 0;
        -:  323:
     4955:  324:        choose_split_axis_and_index_for_axis<
        -:  325:            Box,
        -:  326:            0,
        -:  327:            typename tag<element_indexable_type>::type
     4955:  328:        >::apply(elements, choosen_corner, choosen_index, smallest_sum_of_margins, smallest_overlap, smallest_content, parameters, translator); // MAY THROW
     4955:  329:    }
        -:  330:};
        -:  331:
        -:  332:template <size_t Corner, size_t Dimension, size_t I = 0>
        -:  333:struct nth_element
        -:  334:{
        -:  335:    BOOST_STATIC_ASSERT(0 < Dimension);
        -:  336:    BOOST_STATIC_ASSERT(I < Dimension);
        -:  337:
        -:  338:    template <typename Elements, typename Translator>
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm0ELm2ELm0EE5applyINS2_6varrayISt4pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEES9_ISF_SF_EELm17EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRT_mmRKT0_ called 4458 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm1ELm2ELm0EE5applyINS2_6varrayISt4pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEES9_ISF_SF_EELm17EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRT_mmRKT0_ called 495 returned 100% blocks executed 100%
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm0ELm2ELm1EE5applyINS2_6varrayISt4pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEES9_ISF_SF_EELm17EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRT_mmRKT0_ called 2550 returned 100% blocks executed 80%
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm1ELm2ELm1EE5applyINS2_6varrayISt4pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEES9_ISF_SF_EELm17EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRT_mmRKT0_ called 259 returned 100% blocks executed 80%
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm0ELm2ELm0EE5applyINS2_6varrayINS3_8ptr_pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISG_SJ_ISF_SF_EENS1_5rstarILm16ELm4ELm4ELm32EEESG_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SG_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SG_ST_SS_EEEEEEELm17EEENS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRT_mmRKT0_ called 1 returned 100% blocks executed 80%
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm1ELm2ELm0EE5applyINS2_6varrayINS3_8ptr_pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISG_SJ_ISF_SF_EENS1_5rstarILm16ELm4ELm4ELm32EEESG_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SG_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SG_ST_SS_EEEEEEELm17EEENS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRT_mmRKT0_ called 1 returned 100% blocks executed 80%
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm0ELm2ELm1EE5applyINS2_6varrayINS3_8ptr_pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISG_SJ_ISF_SF_EENS1_5rstarILm16ELm4ELm4ELm32EEESG_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SG_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SG_ST_SS_EEEEEEELm17EEENS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRT_mmRKT0_ called 1 returned 100% blocks executed 80%
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm1ELm2ELm1EE5applyINS2_6varrayINS3_8ptr_pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISG_SJ_ISF_SF_EENS1_5rstarILm16ELm4ELm4ELm32EEESG_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SG_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SG_ST_SS_EEEEEEELm17EEENS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRT_mmRKT0_ called 0 returned 0% blocks executed 0%
     7765:  339:    static inline void apply(Elements & elements, const size_t axis, const size_t index, Translator const& tr)
        -:  340:    {
        -:  341:        //BOOST_GEOMETRY_INDEX_ASSERT(axis < Dimension, "unexpected axis value");
        -:  342:
     7765:  343:        if ( axis != I )
branch  0 taken 57%
branch  1 taken 43%
branch  2 taken 52%
branch  3 taken 48%
branch  4 taken 0%
branch  5 taken 100%
branch  6 taken 0%
branch  7 taken 100%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 100%
branch 12 taken 0%
branch 13 taken 100%
branch 14 never executed
branch 15 never executed
        -:  344:        {
     2810:  345:            nth_element<Corner, Dimension, I + 1>::apply(elements, axis, index, tr);                          // MAY THROW, BASIC (copy)
     2810:  346:        }
        -:  347:        else
        -:  348:        {
        -:  349:            typedef typename Elements::value_type element_type;
        -:  350:            typedef typename rtree::element_indexable_type<element_type, Translator>::type indexable_type;
        -:  351:            typedef typename tag<indexable_type>::type indexable_tag;
        -:  352:
     4955:  353:            element_axis_corner_less<element_type, Translator, indexable_tag, Corner, I> less(tr);
     4955:  354:            index::detail::nth_element(elements.begin(), elements.begin() + index, elements.end(), less);            // MAY THROW, BASIC (copy)
        -:  355:        }
     7765:  356:    }
        -:  357:};
        -:  358:
        -:  359:template <size_t Corner, size_t Dimension>
        -:  360:struct nth_element<Corner, Dimension, Dimension>
        -:  361:{
        -:  362:    template <typename Elements, typename Translator>
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm0ELm2ELm2EE5applyINS2_6varrayISt4pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEES9_ISF_SF_EELm17EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRT_mmRKT0_ called 0 returned 0% blocks executed 0%
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm1ELm2ELm2EE5applyINS2_6varrayISt4pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEES9_ISF_SF_EELm17EEENS2_10translatorINS1_9indexableISI_EENS1_8equal_toISI_EEEEEEvRT_mmRKT0_ called 0 returned 0% blocks executed 0%
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm0ELm2ELm2EE5applyINS2_6varrayINS3_8ptr_pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISG_SJ_ISF_SF_EENS1_5rstarILm16ELm4ELm4ELm32EEESG_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SG_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SG_ST_SS_EEEEEEELm17EEENS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRT_mmRKT0_ called 0 returned 0% blocks executed 0%
function _ZN5boost8geometry5index6detail5rtree5rstar11nth_elementILm1ELm2ELm2EE5applyINS2_6varrayINS3_8ptr_pairINS0_5model3boxINSA_5pointIfLm2ENS0_2cs9cartesianEEEEEPNS_7variantINS3_12variant_leafISt4pairISG_SJ_ISF_SF_EENS1_5rstarILm16ELm4ELm4ELm32EEESG_NS3_10allocatorsINS_9container13new_allocatorISL_EESL_SN_SG_NS3_23node_variant_static_tagEEESS_EEJNS3_21variant_internal_nodeISL_SN_SG_ST_SS_EEEEEEELm17EEENS2_10translatorINS1_9indexableISL_EENS1_8equal_toISL_EEEEEEvRT_mmRKT0_ called 0 returned 0% blocks executed 0%
    #####:  363:    static inline void apply(Elements & /*elements*/, const size_t /*axis*/, const size_t /*index*/, Translator const& /*tr*/)
    #####:  364:    {}
        -:  365:};
        -:  366:
        -:  367:} // namespace rstar
        -:  368:
        -:  369:template <typename Value, typename Options, typename Translator, typename Box, typename Allocators>
        -:  370:struct redistribute_elements<Value, Options, Translator, Box, Allocators, rstar_tag>
        -:  371:{
        -:  372:    typedef typename rtree::node<Value, typename Options::parameters_type, Box, Allocators, typename Options::node_tag>::type node;
        -:  373:    typedef typename rtree::internal_node<Value, typename Options::parameters_type, Box, Allocators, typename Options::node_tag>::type internal_node;
        -:  374:    typedef typename rtree::leaf<Value, typename Options::parameters_type, Box, Allocators, typename Options::node_tag>::type leaf;
        -:  375:
        -:  376:    typedef typename Options::parameters_type parameters_type;
        -:  377:
        -:  378:    static const size_t dimension = geometry::dimension<Box>::value;
        -:  379:
        -:  380:    typedef typename index::detail::default_margin_result<Box>::type margin_type;
        -:  381:    typedef typename index::detail::default_content_result<Box>::type content_type;
        -:  382:
        -:  383:    template <typename Node>
function _ZN5boost8geometry5index6detail5rtree21redistribute_elementsISt4pairINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEES5_ISB_SB_EENS3_7optionsINS1_5rstarILm16ELm4ELm4ELm32EEENS3_19insert_reinsert_tagENS3_26choose_by_overlap_diff_tagENS3_17split_default_tagENS3_9rstar_tagENS3_23node_variant_static_tagEEENS2_10translatorINS1_9indexableISE_EENS1_8equal_toISE_EEEESC_NS3_10allocatorsINS_9container13new_allocatorISE_EESE_SH_SC_SM_EESL_E5applyINS3_12variant_leafISE_SH_SC_SY_SM_EEEEvRT_S14_RSC_S15_RKSH_RKST_RSY_ called 4953 returned 100% blocks executed 64%
function _ZN5boost8geometry5index6detail5rtree21redistribute_elementsISt4pairINS0_5model3boxINS6_5pointIfLm2ENS0_2cs9cartesianEEEEES5_ISB_SB_EENS3_7optionsINS1_5rstarILm16ELm4ELm4ELm32EEENS3_19insert_reinsert_tagENS3_26choose_by_overlap_diff_tagENS3_17split_default_tagENS3_9rstar_tagENS3_23node_variant_static_tagEEENS2_10translatorINS1_9indexableISE_EENS1_8equal_toISE_EEEESC_NS3_10allocatorsINS_9container13new_allocatorISE_EESE_SH_SC_SM_EESL_E5applyINS3_21variant_internal_nodeISE_SH_SC_SY_SM_EEEEvRT_S14_RSC_S15_RKSH_RKST_RSY_ called 2 returned 100% blocks executed 64%
     4955:  384:    static inline void apply(
        -:  385:        Node & n,
        -:  386:        Node & second_node,
        -:  387:        Box & box1,
        -:  388:        Box & box2,
        -:  389:        parameters_type const& parameters,
        -:  390:        Translator const& translator,
        -:  391:        Allocators & allocators)
        -:  392:    {
        -:  393:        typedef typename rtree::elements_type<Node>::type elements_type;
        -:  394:        typedef typename elements_type::value_type element_type;
        -:  395:        
     4955:  396:        elements_type & elements1 = rtree::elements(n);
     4955:  397:        elements_type & elements2 = rtree::elements(second_node);
        -:  398:
        -:  399:        // copy original elements - use in-memory storage (std::allocator)
        -:  400:        // TODO: move if noexcept
        -:  401:        typedef typename rtree::container_from_elements_type<elements_type, element_type>::type
        -:  402:            container_type;
     4955:  403:        container_type elements_copy(elements1.begin(), elements1.end());                               // MAY THROW, STRONG
     4955:  404:        container_type elements_backup(elements1.begin(), elements1.end());                             // MAY THROW, STRONG
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
        -:  405:
     4955:  406:        size_t split_axis = 0;
     4955:  407:        size_t split_corner = 0;
     4955:  408:        size_t split_index = parameters.get_min_elements();
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
     4955:  409:        margin_type smallest_sum_of_margins = (std::numeric_limits<margin_type>::max)();
     4955:  410:        content_type smallest_overlap = (std::numeric_limits<content_type>::max)();
     4955:  411:        content_type smallest_content = (std::numeric_limits<content_type>::max)();
        -:  412:
        -:  413:        // NOTE: this function internally copies passed elements
        -:  414:        //       why not pass mutable elements and use the same container for all axes/corners
        -:  415:        //       and again, the same below calling partial_sort/nth_element
        -:  416:        //       It would be even possible to not re-sort/find nth_element if the axis/corner
        -:  417:        //       was found for the last sorting - last combination of axis/corner
     4955:  418:        rstar::choose_split_axis_and_index<Box, dimension>
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
        -:  419:            ::apply(elements_copy,
        -:  420:                    split_axis, split_corner, split_index,
        -:  421:                    smallest_sum_of_margins, smallest_overlap, smallest_content,
     4955:  422:                    parameters, translator);                                                            // MAY THROW, STRONG
        -:  423:
        -:  424:        // TODO: awulkiew - get rid of following static_casts?
     4955:  425:        BOOST_GEOMETRY_INDEX_ASSERT(split_axis < dimension, "unexpected value");
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
     4955:  426:        BOOST_GEOMETRY_INDEX_ASSERT(split_corner == static_cast<size_t>(min_corner) || split_corner == static_cast<size_t>(max_corner), "unexpected value");
branch  0 taken 10%
branch  1 taken 90%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 50%
branch  5 taken 50%
branch  6 taken 100%
branch  7 taken 0%
     4955:  427:        BOOST_GEOMETRY_INDEX_ASSERT(parameters.get_min_elements() <= split_index && split_index <= parameters.get_max_elements() - parameters.get_min_elements() + 1, "unexpected value");
branch  0 taken 0%
branch  1 taken 100%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 100%
branch  6 taken 0%
branch  7 taken 100%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 100%
branch 12 taken 100%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 100%
branch 16 taken 0%
branch 17 taken 100%
branch 18 taken 100%
branch 19 taken 0%
        -:  428:
        -:  429:        // TODO: consider using nth_element
     4955:  430:        if ( split_corner == static_cast<size_t>(min_corner) )
branch  0 taken 90%
branch  1 taken 10%
branch  2 taken 50%
branch  3 taken 50%
        -:  431:        {
     4459:  432:            rstar::nth_element<min_corner, dimension>
branch  0 taken 0%
branch  1 taken 100%
branch  2 taken 0%
branch  3 taken 100%
     4459:  433:                ::apply(elements_copy, split_axis, split_index, translator);                            // MAY THROW, BASIC (copy)
     4459:  434:        }
        -:  435:        else
        -:  436:        {
      496:  437:            rstar::nth_element<max_corner, dimension>
branch  0 taken 0%
branch  1 taken 100%
branch  2 taken 0%
branch  3 taken 100%
      496:  438:                ::apply(elements_copy, split_axis, split_index, translator);                            // MAY THROW, BASIC (copy)
        -:  439:        }
        -:  440:
        -:  441:        BOOST_TRY
        -:  442:        {
        -:  443:            // copy elements to nodes
     4955:  444:            elements1.assign(elements_copy.begin(), elements_copy.begin() + split_index);               // MAY THROW, BASIC
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
     4955:  445:            elements2.assign(elements_copy.begin() + split_index, elements_copy.end());                 // MAY THROW, BASIC
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
        -:  446:
        -:  447:            // calculate boxes
     4955:  448:            box1 = rtree::elements_box<Box>(elements1.begin(), elements1.end(), translator);
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
     4955:  449:            box2 = rtree::elements_box<Box>(elements2.begin(), elements2.end(), translator);
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 100%
branch  9 taken 0%
branch 10 taken 100%
branch 11 taken 0%
     4955:  450:        }
        -:  451:        BOOST_CATCH(...)
        -:  452:        {
        -:  453:            //elements_copy.clear();
    #####:  454:            elements1.clear();
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  455:            elements2.clear();
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  456:
    #####:  457:            rtree::destroy_elements<Value, Options, Translator, Box, Allocators>::apply(elements_backup, allocators);
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  458:            //elements_backup.clear();
        -:  459:
    #####:  460:            BOOST_RETHROW                                                                                 // RETHROW, BASIC
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  461:        }
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  462:        BOOST_CATCH_END
     4955:  463:    }
        -:  464:};
        -:  465:
        -:  466:}} // namespace detail::rtree
        -:  467:
        -:  468:}}} // namespace boost::geometry::index
        -:  469:
        -:  470:#endif // BOOST_GEOMETRY_INDEX_DETAIL_RTREE_RSTAR_REDISTRIBUTE_ELEMENTS_HPP
