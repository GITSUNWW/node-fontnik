        -:    0:Source:/home/travis/build/GITSUNWW/node-fontnik/mason_packages/.link/include/boost/geometry/index/detail/algorithms/intersection_content.hpp
        -:    0:Graph:/home/travis/build/GITSUNWW/node-fontnik/build/Debug/obj.target/fontnik/src/glyphs.gcno
        -:    0:Data:/home/travis/build/GITSUNWW/node-fontnik/build/Debug/obj.target/fontnik/src/glyphs.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// Boost.Geometry Index
        -:    2://
        -:    3:// boxes union/intersection area/volume
        -:    4://
        -:    5:// Copyright (c) 2011-2017 Adam Wulkiewicz, Lodz, Poland.
        -:    6://
        -:    7:// Use, modification and distribution is subject to the Boost Software License,
        -:    8:// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
        -:    9:// http://www.boost.org/LICENSE_1_0.txt)
        -:   10:
        -:   11:#ifndef BOOST_GEOMETRY_INDEX_DETAIL_ALGORITHMS_INTERSECTION_CONTENT_HPP
        -:   12:#define BOOST_GEOMETRY_INDEX_DETAIL_ALGORITHMS_INTERSECTION_CONTENT_HPP
        -:   13:
        -:   14:#include <boost/geometry/algorithms/detail/disjoint/box_box.hpp>
        -:   15:#include <boost/geometry/algorithms/detail/overlay/intersection_box_box.hpp>
        -:   16:
        -:   17:#include <boost/geometry/index/detail/algorithms/content.hpp>
        -:   18:
        -:   19:namespace boost { namespace geometry { namespace index { namespace detail {
        -:   20:
        -:   21:/**
        -:   22: * \brief Compute the area of the intersection of b1 and b2
        -:   23: */
        -:   24:template <typename Box>
function _ZN5boost8geometry5index6detail20intersection_contentINS0_5model3boxINS4_5pointIfLm2ENS0_2cs9cartesianEEEEEEENS2_22default_content_resultIT_E4typeERKSC_SG_ called 561522 returned 100% blocks executed 85%
   561522:   25:inline typename default_content_result<Box>::type intersection_content(Box const& box1, Box const& box2)
        -:   26:{
   561522:   27:    bool const intersects = ! geometry::detail::disjoint::box_box<Box, Box>::apply(box1, box2);
        -:   28:
   561522:   29:    if ( intersects )
branch  0 taken 78%
branch  1 taken 22%
        -:   30:    {
        -:   31:        Box box_intersection;
   440770:   32:        bool const ok = geometry::detail::intersection::intersection_box_box
        -:   33:                            <
        -:   34:                                0, geometry::dimension<Box>::value
   440770:   35:                            >::apply(box1, box2, 0, box_intersection, 0);
   440770:   36:        if ( ok )
branch  0 taken 100%
branch  1 taken 0%
        -:   37:        {
   440770:   38:            return index::detail::content(box_intersection);
        -:   39:        }
    #####:   40:    }
   120759:   41:    return 0;
   561527:   42:}
        -:   43:
        -:   44:}}}} // namespace boost::geometry::index::detail
        -:   45:
        -:   46:#endif // BOOST_GEOMETRY_INDEX_DETAIL_ALGORITHMS_INTERSECTION_CONTENT_HPP
